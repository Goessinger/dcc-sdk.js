const {sign, verify, pack, unpack, signAndPack, unpackAndVerify, makeCWT, parseCWT, debug} = require('../lib/index');const expect = require('chai').expect; 

describe('BG', async () => {
  it('should verify BG_2DCode_raw_1', async () => {
    const
    const cwtPayload = await unpackAndVerify(HC1);
    expect(cwtPayload).not.to.be.null;
    expect(cwtPayload).not.to.be.undefined;
  });

  it('should verify BG_2DCode_raw_2', async () => {
    const
    const cwtPayload = await unpackAndVerify(HC1);
    expect(cwtPayload).not.to.be.null;
    expect(cwtPayload).not.to.be.undefined;
  });

  it('should verify BG_2DCode_raw_3', async () => {
    const HC1 = 'HC1:NCFOXN*TS0BI$ZDYSHIAL*ECH 8S021092LHNDC3LE84DIJ9917QFG4G5T3E3QGNO4*J8OX4W$C2VLWLI3K5YO9OUUMK9WLIK*L5R1G$J3:LD:RNH8$S9ZPKBTOAV7I%BXYHH+H:PIWEGLS47%S%*48YIZ73423ZQT+EJDG35:4UZ2 NVV5TN%2UP20J5/5LEBFD-48YI+T4D-4HRVUMNMD3323R1370RC-4A+2XEN QT QTHC31M3+E3CP456L X4CZKHKB-43.E3KD3OAJ5%IWZKRA38M7323Q05.$S6ZC0JBV63MD3I708999Q9E$BDZIU6JLGCE*GO:2G504C062KLZIX2BAGCB%GV-2YVBTULBH5 ZJ83BV+3UEUJ14V:3:ZJ83B.VSR8T11D:I2UM97H98$QJEQ8BH3HUXNU33OTWVNPBO/DWBAFYN JVG O3 TRXE$LKJRH6THHYAA/E5ON7DQXPA:Y48UF:ZI2KI-2J09MYO9YUVZ.Q:4SG:FUVN8UL*TNI10Z$121';
    const cwtPayload = await unpackAndVerify(HC1);
    expect(cwtPayload).not.to.be.null;
    expect(cwtPayload).not.to.be.undefined;
  });

  it('should verify BG_2DCode_raw_4', async () => {
    const
    const cwtPayload = await unpackAndVerify(HC1);
    expect(cwtPayload).not.to.be.null;
    expect(cwtPayload).not.to.be.undefined;
  });

});

