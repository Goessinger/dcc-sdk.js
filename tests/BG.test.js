const {sign, verify, pack, unpack, signAndPack, unpackAndVerify, signAndPack32, signAndPack45, makeCWT, parseCWT, debug} = require('../lib/index');

test('Verify BG_2DCode_raw_1', async () => {
  const
  const cwtPayload = await unpackAndVerify(HC1);
  expect(cwtPayload).not.toBe(null);
  expect(cwtPayload).not.toBe(undefined);
});

